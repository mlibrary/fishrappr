{"version":3,"sources":["selection.js","selectionoverlay.js","selectionrect.js"],"names":["$","onOutsideDrag","e","this","viewer","setMouseNavEnabled","jQuery","toolbar","css","delta","viewport","deltaPointsFromPixels","end","pointFromPixel","position","start","Point","x","y","rect","oldRect","restrictToImage","clone","rectDone","angle1","getAngleFromCenter","angle2","rotation","Math","PI","startRotated","getPrerotatedRect","rotatedStartPoint","startRotatedHeight","width","height","fitsIn","Rect","pointIsInImage","restrictVector","SelectionRect","draw","onOutsideDragEnd","top","bottom","translate_x","$toolbar","make_transform","r","transform","h0","$selection","element","$viewer","h1","parent","p1","h2","p0","style","translate_y","left","getRotation","visibility","raiseEvent","onClick","canvas","focus","onInsideDrag","addClass","onInsideDragEnd","removeClass","onBorderDrag","border","center","getDegreeRotation","rotate","getCenter","newCenter","target","minus","onKeyPress","key","keyCode","charCode","console","log","confirm","cancel","String","fromCharCode","keyboardShortcut","toggleState","dist","distanceTo","angle","atan2","heightModDelta","point","prop","version","major","Error","Viewer","prototype","selection","options","selectionInstance","Selection","extend","isSelecting","buttonActiveImg","toggleButton","showSelectionControl","showConfirmDenyButtons","styleConfirmDenyButtons","returnPixelCoordinates","onSelection","onSelectionDrawn","onDownloadSelection","onZoomSelection","onCancelSelection","prefixUrl","navImages","REST","GROUP","HOVER","DOWN","selectionConfirm","selectionCancel","makeNeutralElement","background","className","borders","handle","corners","i","margin","MouseTracker","dragHandler","bind","appendChild","setTimeout","right","overlay","SelectionOverlay","innerTracker","clickTimeThreshold","clickDistThreshold","delegate","dragEndHandler","clickHandler","outerTracker","startDisabled","addEvent","container","prefix","useGroup","buttons","anyButton","onFocusHandler","onFocus","onBlurHandler","onBlur","Button","getElement","tooltip","getString","srcRest","srcGroup","srcHover","srcDown","onRelease","push","imgDown","cloneNode","div","get","undefined","document","createElement","zIndex","textAlign","btn","innerHTML","zoomButton","zoom","button_width","marginRight","downloadButton","download","cancelButton","classList","add","addHandler","ControlDock","setState","enabled","setTracking","undraw","enable","disable","update","normalize","drawHTML","drawer","destroy","result","real","viewportToImageRectangle","fromRect","round","OpenSeadragon","location","Overlay","apply","arguments","isPlainObject","Object","create","replace","equals","other","toString","swapWidthHeight","swapped","diff","fixed","area","getTopLeft","getTopRight","getBottomRight","getBottomLeft","areaEnd","reduceRotation","reduced"],"mappings":"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","file":"openseadragonselection.js","sourcesContent":["(function($) {\n    'use strict';\n\n    if (!$.version || $.version.major < 2) {\n        throw new Error('This version of OpenSeadragonSelection requires OpenSeadragon version 2.0.0+');\n    }\n\n    $.Viewer.prototype.selection = function(options) {\n        if (!this.selectionInstance || options) {\n            options = options || {};\n            options.viewer = this;\n            this.selectionInstance = new $.Selection(options);\n        }\n        return this.selectionInstance;\n    };\n\n\n    /**\n    * @class Selection\n    * @classdesc Provides functionality for selecting part of an image\n    * @memberof OpenSeadragon\n    * @param {Object} options\n    */\n    $.Selection = function ( options ) {\n\n        $.extend( true, this, {\n            // internal state properties\n            viewer:                  null,\n            isSelecting:             false,\n            buttonActiveImg:         false,\n            rectDone:                true,\n\n            // options\n            element:                 null,\n            toggleButton:            null,\n            showSelectionControl:    true,\n            showConfirmDenyButtons:  false,\n            styleConfirmDenyButtons: true,\n            returnPixelCoordinates:  true,\n            keyboardShortcut:        'c',\n            rect:                    null,\n            startRotated:            false, // useful for rotated crops\n            startRotatedHeight:      0.1,\n            restrictToImage:         false,\n            onSelection:             null,\n            onSelectionDrawn:        null,\n            onDownloadSelection:             null,\n            onZoomSelection:             null,\n            onCancelSelection:       null,\n            prefixUrl:               null,\n            navImages:               {\n                selection: {\n                    REST:   'selection_rest.png',\n                    GROUP:  'selection_grouphover.png',\n                    HOVER:  'selection_hover.png',\n                    DOWN:   'selection_pressed.png'\n                },\n                selectionConfirm: {\n                    REST:   'selection_confirm_rest.png',\n                    GROUP:  'selection_confirm_grouphover.png',\n                    HOVER:  'selection_confirm_hover.png',\n                    DOWN:   'selection_confirm_pressed.png'\n                },\n                selectionCancel: {\n                    REST:   'selection_cancel_rest.png',\n                    GROUP:  'selection_cancel_grouphover.png',\n                    HOVER:  'selection_cancel_hover.png',\n                    DOWN:   'selection_cancel_pressed.png'\n                },\n            }\n        }, options );\n\n        $.extend( true, this.navImages, this.viewer.navImages );\n\n        if (!this.element) {\n            this.element = $.makeNeutralElement('div');\n            this.element.style.background = 'rgba(0, 0, 0, 0.1)';\n            this.element.className        = 'selection-box';\n        }\n        this.borders = this.borders || [];\n        var handle;\n        var corners = [];\n        for (var i = 0; i < 4; i++) {\n            if (!this.borders[i]) {\n                this.borders[i]                  = $.makeNeutralElement('div');\n                this.borders[i].className        = 'border-' + i;\n                this.borders[i].style.position   = 'absolute';\n                this.borders[i].style.width      = '1px';\n                this.borders[i].style.height     = '1px';\n                this.borders[i].style.background = '#fff';\n            }\n\n            handle                  = $.makeNeutralElement('div');\n            handle.className        = 'border-' + i + '-handle';\n            handle.style.position   = 'absolute';\n            handle.style.top        = '50%';\n            handle.style.left       = '50%';\n            handle.style.width      = '6px';\n            handle.style.height     = '6px';\n            handle.style.margin     = '-4px 0 0 -4px';\n            handle.style.background = '#000';\n            handle.style.border     = '1px solid #ccc';\n            new $.MouseTracker({\n                element:     this.borders[i],\n                dragHandler: onBorderDrag.bind(this, i),\n            });\n\n            corners[i]                  = $.makeNeutralElement('div');\n            corners[i].className        = 'corner-' + i + '-handle';\n            corners[i].style.position   = 'absolute';\n            corners[i].style.width      = '6px';\n            corners[i].style.height     = '6px';\n            corners[i].style.background = '#000';\n            corners[i].style.border     = '1px solid #ccc';\n            new $.MouseTracker({\n                element:     corners[i],\n                dragHandler: onBorderDrag.bind(this, i + 0.5),\n            });\n\n            this.borders[i].appendChild(handle);\n            this.element.appendChild(this.borders[i]);\n            // defer corners, so they are appended last\n            setTimeout(this.element.appendChild.bind(this.element, corners[i]), 0);\n        }\n        this.borders[0].style.top = 0;\n        this.borders[0].style.width = '100%';\n        this.borders[1].style.right = 0;\n        this.borders[1].style.height = '100%';\n        this.borders[2].style.bottom = 0;\n        this.borders[2].style.width = '100%';\n        this.borders[3].style.left = 0;\n        this.borders[3].style.height = '100%';\n        corners[0].style.top = '-3px';\n        corners[0].style.left = '-3px';\n        corners[1].style.top = '-3px';\n        corners[1].style.right = '-3px';\n        corners[2].style.bottom = '-3px';\n        corners[2].style.right = '-3px';\n        corners[3].style.bottom = '-3px';\n        corners[3].style.left = '-3px';\n\n        if (!this.overlay) {\n            this.overlay = new $.SelectionOverlay(this.element, this.rect || new $.SelectionRect());\n        }\n\n        this.innerTracker = new $.MouseTracker({\n            element:            this.element,\n            clickTimeThreshold: this.viewer.clickTimeThreshold,\n            clickDistThreshold: this.viewer.clickDistThreshold,\n            dragHandler:        $.delegate( this, onInsideDrag ),\n            dragEndHandler:     $.delegate( this, onInsideDragEnd ),\n            // keyHandler:         $.delegate( this, onKeyPress ),\n            clickHandler:       $.delegate( this, onClick ),\n            // scrollHandler:      $.delegate( this.viewer, this.viewer.innerTracker.scrollHandler ),\n            // pinchHandler:       $.delegate( this.viewer, this.viewer.innerTracker.pinchHandler ),\n        });\n\n        this.outerTracker = new $.MouseTracker({\n            element:            this.viewer.canvas,\n            clickTimeThreshold: this.viewer.clickTimeThreshold,\n            clickDistThreshold: this.viewer.clickDistThreshold,\n            dragHandler:        $.delegate( this, onOutsideDrag ),\n            dragEndHandler:     $.delegate( this, onOutsideDragEnd ),\n            clickHandler:       $.delegate( this, onClick ),\n            startDisabled:      !this.isSelecting,\n        });\n\n        if (this.keyboardShortcut) {\n            $.addEvent(\n                this.viewer.container,\n                'keypress',\n                $.delegate(this, onKeyPress),\n                false\n            );\n        }\n\n        var prefix = this.prefixUrl || this.viewer.prefixUrl || '';\n        var useGroup = this.viewer.buttons && this.viewer.buttons.buttons;\n        var anyButton = useGroup ? this.viewer.buttons.buttons[0] : null;\n        var onFocusHandler = anyButton ? anyButton.onFocus : null;\n        var onBlurHandler = anyButton ? anyButton.onBlur : null;\n        if (this.showSelectionControl) {\n            this.toggleButton = new $.Button({\n                element:    this.toggleButton ? $.getElement( this.toggleButton ) : null,\n                clickTimeThreshold: this.viewer.clickTimeThreshold,\n                clickDistThreshold: this.viewer.clickDistThreshold,\n                tooltip:    $.getString('Tooltips.SelectionToggle') || 'Toggle selection',\n                srcRest:    prefix + this.navImages.selection.REST,\n                srcGroup:   prefix + this.navImages.selection.GROUP,\n                srcHover:   prefix + this.navImages.selection.HOVER,\n                srcDown:    prefix + this.navImages.selection.DOWN,\n                onRelease:  this.toggleState.bind( this ),\n                onFocus:    onFocusHandler,\n                onBlur:     onBlurHandler\n            });\n            if (useGroup) {\n                this.viewer.buttons.buttons.push(this.toggleButton);\n                this.viewer.buttons.element.appendChild(this.toggleButton.element);\n            }\n            if (this.toggleButton.imgDown) {\n                this.buttonActiveImg = this.toggleButton.imgDown.cloneNode(true);\n                this.toggleButton.element.appendChild(this.buttonActiveImg);\n            }\n        }\n        if (this.showConfirmDenyButtons) {\n            var div = jQuery(\".selection-toolbar\").get(0);\n            if ( div === undefined ) {\n                div = document.createElement('div');\n                // var div = $.makeNeutralElement('div');\n                div.className = 'selection-toolbar';\n                // jQuery(this.element).parent().appendChild(div);\n                div.style.position = 'absolute';\n                div.style.width = '30em';\n                // div.style.width = '100%';\n                div.style.zIndex = 9000;\n                div.style.textAlign = 'center';\n                div.style.visibility = 'hidden';\n                this.element.appendChild(div);\n                // this.viewer.element.appendChild(div);\n            }\n\n            this.toolbar = div;\n\n            var btn = document.createElement('button');\n            btn.className = 'btn btn-sm btn-default';\n            btn.innerHTML = '<i class=\"icon_add\" aria-hidden=\"true\"></i> Zoom In';\n            this.zoomButton = new $.Button({\n                element:    btn, // this.confirmButton ? $.getElement( this.confirmButton ) : null,\n                clickTimeThreshold: this.viewer.clickTimeThreshold,\n                clickDistThreshold: this.viewer.clickDistThreshold,\n                // tooltip:    $.getString('Tooltips.SelectionConfirm') || 'Confirm selection',\n                // srcRest:    prefix + this.navImages.selectionConfirm.REST,\n                // srcGroup:   prefix + this.navImages.selectionConfirm.GROUP,\n                // srcHover:   prefix + this.navImages.selectionConfirm.HOVER,\n                // srcDown:    prefix + this.navImages.selectionConfirm.DOWN,\n                onRelease:  this.zoom.bind( this ),\n                onFocus:    onFocusHandler,\n                onBlur:     onBlurHandler\n            });\n\n            var button_width = '9em';\n            var zoom = this.zoomButton.element;\n            // zoom.classList.add('confirm-button');\n            // this.element.appendChild(zoom);\n            div.appendChild(zoom);\n            // zoom.style.display = 'block';\n            zoom.style.width = button_width;\n            zoom.style.marginRight = '0.25em';\n            // zoom.style.marginBottom = '0.125em';\n\n            btn = document.createElement('button');\n            btn.className = 'btn btn-sm btn-default';\n            btn.innerHTML = '<i class=\"icon_image_file\" aria-hidden=\"true\"></i> Download';\n\n            this.downloadButton = new $.Button({\n                element:    btn, // this.confirmButton ? $.getElement( this.confirmButton ) : null,\n                clickTimeThreshold: this.viewer.clickTimeThreshold,\n                clickDistThreshold: this.viewer.clickDistThreshold,\n                // tooltip:    $.getString('Tooltips.SelectionConfirm') || 'Confirm selection',\n                // srcRest:    prefix + this.navImages.selectionConfirm.REST,\n                // srcGroup:   prefix + this.navImages.selectionConfirm.GROUP,\n                // srcHover:   prefix + this.navImages.selectionConfirm.HOVER,\n                // srcDown:    prefix + this.navImages.selectionConfirm.DOWN,\n                onRelease:  this.download.bind( this ),\n                onFocus:    onFocusHandler,\n                onBlur:     onBlurHandler\n            });\n            var download = this.downloadButton.element;\n            // download.classList.add('confirm-button');\n            // this.element.appendChild(download);\n            div.appendChild(download);\n            // download.style.display = 'block';\n            download.style.width = button_width;\n            download.style.marginRight = '0.25em';\n\n            // download.style.marginBottom = '1em'; // 0.125em';\n\n            btn = document.createElement('button');\n            btn.className = 'btn btn-sm btn-action';\n            btn.innerHTML = 'Cancel';\n\n            this.cancelButton = new $.Button({\n                element:    btn,\n                clickTimeThreshold: this.viewer.clickTimeThreshold,\n                clickDistThreshold: this.viewer.clickDistThreshold,\n                // tooltip:    $.getString('Tooltips.SelectionConfirm') || 'Cancel selection',\n                // srcRest:    prefix + this.navImages.selectionCancel.REST,\n                // srcGroup:   prefix + this.navImages.selectionCancel.GROUP,\n                // srcHover:   prefix + this.navImages.selectionCancel.HOVER,\n                // srcDown:    prefix + this.navImages.selectionCancel.DOWN,\n                onRelease:  this.cancel.bind( this ),\n                onFocus:    onFocusHandler,\n                onBlur:     onBlurHandler\n            });\n            var cancel = this.cancelButton.element;\n            cancel.classList.add('cancel-button');\n            // this.element.appendChild(cancel);\n            div.appendChild(cancel);\n            // cancel.style.display = 'block';\n            cancel.style.width = button_width;\n\n            div.style.position = 'absolute';\n            // div.style.top = '110%';\n            // div.style.left = '50%';\n            // div.style.transform = 'translate(-50%, 0)';\n\n            if (false && this.styleConfirmDenyButtons) {\n                // confirm.style.position = 'absolute';\n                // confirm.style.top = '50%';\n                // confirm.style.left = '50%';\n                // confirm.style.transform = 'translate(-50%, -50%)';\n\n                // cancel.style.position = 'absolute';\n                // cancel.style.top = '50%';\n                // cancel.style.left = '50%';\n                // cancel.style.transform = 'translate(0, -50%)';\n            }\n        }\n\n        this.viewer.addHandler('selection', this.onSelection);\n        this.viewer.addHandler('downloadSelection', this.onDownloadSelection);\n        this.viewer.addHandler('zoomSelection', this.onZoomSelection);\n        this.viewer.addHandler('cancelSelection', this.onCancelSelection);\n        this.viewer.addHandler('selectionDrawn', this.onSelectionDrawn);\n\n        this.viewer.addHandler('open', this.draw.bind(this));\n        this.viewer.addHandler('animation', this.draw.bind(this));\n        this.viewer.addHandler('resize', this.draw.bind(this));\n        this.viewer.addHandler('rotate', this.draw.bind(this));\n    };\n\n    $.extend( $.Selection.prototype, $.ControlDock.prototype, /** @lends OpenSeadragon.Selection.prototype */{\n\n        toggleState: function() {\n            return this.setState(!this.isSelecting);\n        },\n\n        setState: function(enabled) {\n            this.isSelecting = enabled;\n            // this.viewer.innerTracker.setTracking(!enabled);\n            this.outerTracker.setTracking(enabled);\n            enabled ? this.draw() : this.undraw();\n            if (this.buttonActiveImg) {\n                this.buttonActiveImg.style.visibility = enabled ? 'visible' : 'hidden';\n            }\n            this.viewer.raiseEvent('selection_toggle', {enabled: enabled});\n            return this;\n        },\n\n        enable: function() {\n            return this.setState(true);\n        },\n\n        disable: function() {\n            return this.setState(false);\n        },\n\n        draw: function() {\n            if (this.rect) {\n                this.overlay.update(this.rect.normalize());\n                this.overlay.drawHTML(this.viewer.drawer.container, this.viewer.viewport);\n            }\n            return this;\n        },\n\n        undraw: function() {\n            this.overlay.destroy();\n            jQuery(this.toolbar).css('visibility', 'hidden');\n            this.rect = null;\n            return this;\n        },\n\n        confirm: function() {\n            if (this.rect) {\n                var result = this.rect.normalize();\n                if (this.returnPixelCoordinates) {\n                    var real = this.viewer.viewport.viewportToImageRectangle(result);\n                    real = $.SelectionRect.fromRect(real).round();\n                    real.rotation = result.rotation;\n                    result = real;\n                }\n                this.viewer.raiseEvent('selection', result);\n                this.undraw();\n            }\n            return this;\n        },\n\n        zoom: function() {\n            if (this.rect) {\n                var result = this.rect.normalize();\n                if (this.returnPixelCoordinates) {\n                    var real = this.viewer.viewport.viewportToImageRectangle(result);\n                    real = $.SelectionRect.fromRect(real).round();\n                    real.rotation = result.rotation;\n                    result = real;\n                }\n                this.viewer.raiseEvent('zoomSelection', result);\n                this.undraw();\n            }\n            return this;\n        },\n\n        download: function() {\n            if (this.rect) {\n                var result = this.rect.normalize();\n                if (this.returnPixelCoordinates) {\n                    var real = this.viewer.viewport.viewportToImageRectangle(result);\n                    real = $.SelectionRect.fromRect(real).round();\n                    real.rotation = result.rotation;\n                    result = real;\n                }\n                this.viewer.raiseEvent('downloadSelection', result);\n                this.undraw();\n            }\n            return this;\n        },\n\n        cancel: function() {\n            this.viewer.raiseEvent('cancelSelection', false);\n            return this.undraw();\n        },\n    });\n\n    function onOutsideDrag(e) {\n        // Disable move when makeing new selection\n        this.viewer.setMouseNavEnabled(false);\n        // jQuery(this.element).find(\".selection-toolbar\").css('visibility', 'hidden');\n        jQuery(this.toolbar).css('visibility', 'hidden');\n\n        var delta = this.viewer.viewport.deltaPointsFromPixels(e.delta, true);\n        var end = this.viewer.viewport.pointFromPixel(e.position, true);\n        var start = new $.Point(end.x - delta.x, end.y - delta.y);\n        if (!this.rect) {\n            if (this.restrictToImage) {\n                if (!pointIsInImage(start)) {\n                    return;\n                }\n                restrictVector(delta, end);\n            }\n            if (this.startRotated) {\n                this.rotatedStartPoint = start;\n                this.rect = getPrerotatedRect(start, end, this.startRotatedHeight);\n            } else {\n                this.rect = new $.SelectionRect(start.x, start.y, delta.x, delta.y);\n            }\n            this.rectDone = false;\n        } else {\n            var oldRect;\n            if (this.restrictToImage) {\n                oldRect = this.rect.clone();\n            }\n            if (this.rectDone) {\n                // rotate\n                var angle1 = this.rect.getAngleFromCenter(start);\n                var angle2 = this.rect.getAngleFromCenter(end);\n                this.rect.rotation = (this.rect.rotation + angle1 - angle2) % Math.PI;\n            } else {\n                if (this.startRotated) {\n                    this.rect = getPrerotatedRect(this.rotatedStartPoint, end, this.startRotatedHeight);\n                } else {\n                    this.rect.width += delta.x;\n                    this.rect.height += delta.y;\n                }\n            }\n            if (this.restrictToImage && !this.rect.fitsIn(new $.Rect(0, 0, 1, 1))) {\n                this.rect = oldRect;\n            }\n        }\n        this.draw();\n    }\n\n    function onOutsideDragEnd() {\n        // Eable move after new selection is done\n        this.viewer.setMouseNavEnabled(true);\n        this.rectDone = true;\n        var $toolbar = jQuery(this.toolbar); // .find('.selection-toolbar');\n\n        var make_transform = function(x, y, r) {\n            r = r || 0;\n            var transform = \"translate(\" + x + \", \" + y + \")\";\n            if ( r != 0 ) {\n                transform += \" rotate(\" + r + \"deg)\";\n            }\n            return transform;\n        }\n\n        // if we're rotated, the positioning all changes\n\n        var h0 = $toolbar.height();\n        var $selection = jQuery(this.element);\n        var $viewer = jQuery(this.viewer.element);\n        var h1 = $toolbar.parent().height();\n        var p1 = $selection.position().top + h1;\n        var h2 = $viewer.height();\n        var p0 = $selection.height() * 1.10;\n        var w0 = $selection.width();\n        var style = {};\n        var top; var bottom; var translate_x; var translate_y = '0'; var left = '50%';\n        var r = this.viewer.viewport.getRotation();\n        if ( ( p0 + p1 ) < h2 ) {\n            top = p0 + 'px'; bottom = ''; translate_x = '-50%';\n            // style = { top: p0 + 'px', bottom: '', transform: 'translate(-50%, 0)' };\n        } else if ( p1 - p0 > h0 ) {\n            bottom = p0 + 'px'; top = ''; translate_x = '-50%';\n            // style = { bottom: p0 + 'px', top: '', transform: 'translate(-50%, 0)' };\n        } else {\n            bottom = '';\n            top = '50%';\n            translate_x = '-50%';\n            translate_y = '-50%';\n            // style = { bottom: '', top: '50%', tranform: 'translate(-50%, -50%)' };\n        }\n\n        if ( r == 0 ) {\n            // no rotation\n            style.top = top;\n            style.bottom = bottom;\n            style.left = left;\n            style.transform = make_transform(translate_x, translate_y);\n        } else if ( r == 90 ) {\n            style.top = bottom;\n            style.bottom = left;\n            style.left = -top;\n            style.transform = make_transform(translate_y, translate_x, -r);\n        } else if ( r == 180 ) {\n            style.top = bottom;\n            style.bottom = top;\n            style.left = left;\n            style.transform = make_transform(translate_x, translate_y, -r);\n        } else if ( r == 270 ) {\n            style.top = left;\n            style.bottom = bottom;\n            style.left = -top;\n            style.transform = make_transform(translate_x, translate_y, -r);\n        }\n\n        // if ( this.viewer.viewport.getRotation() > 0 ) {\n        //     var r = this.viewer.viewport.getRotation();\n        //     style.transform = style.transform + \" rotate(\" + -r + \"deg)\";\n        //     // style.transform = \"rotate(\" + -r + \"deg) \" + style.transform;\n        // }\n        style.visibility = 'visible';\n        $toolbar.css(style);\n        // $toolbar.css('visibility', 'visible');\n\n        this.viewer.raiseEvent('selectionDrawn');\n    }\n\n    function onClick() {\n        this.viewer.canvas.focus();\n    }\n\n    function onInsideDrag(e) {\n        $.addClass(this.element, 'dragging');\n        var delta = this.viewer.viewport.deltaPointsFromPixels(e.delta, true);\n        this.rect.x += delta.x;\n        this.rect.y += delta.y;\n        if (this.restrictToImage && !this.rect.fitsIn(new $.Rect(0, 0, 1, 1))) {\n            this.rect.x -= delta.x;\n            this.rect.y -= delta.y;\n        }\n        this.draw();\n    }\n\n    function onInsideDragEnd() {\n        $.removeClass(this.element, 'dragging');\n    }\n\n    function onBorderDrag(border, e) {\n        var delta = e.delta;\n        var rotation = this.rect.getDegreeRotation();\n        var center;\n        var oldRect = this.restrictToImage ? this.rect.clone() : null;\n        if (rotation !== 0) {\n            // adjust vector\n            delta = delta.rotate(-1 * rotation, new $.Point(0, 0));\n            center = this.rect.getCenter();\n        }\n        delta = this.viewer.viewport.deltaPointsFromPixels(delta, true);\n        switch (border) {\n            case 0:\n                this.rect.y += delta.y;\n                this.rect.height -= delta.y;\n                break;\n            case 1:\n                this.rect.width += delta.x;\n                break;\n            case 2:\n                this.rect.height += delta.y;\n                break;\n            case 3:\n                this.rect.x += delta.x;\n                this.rect.width -= delta.x;\n                break;\n            case 0.5:\n                this.rect.y += delta.y;\n                this.rect.height -= delta.y;\n                this.rect.x += delta.x;\n                this.rect.width -= delta.x;\n                break;\n            case 1.5:\n                this.rect.y += delta.y;\n                this.rect.height -= delta.y;\n                this.rect.width += delta.x;\n                break;\n            case 2.5:\n                this.rect.width += delta.x;\n                this.rect.height += delta.y;\n                break;\n            case 3.5:\n                this.rect.height += delta.y;\n                this.rect.x += delta.x;\n                this.rect.width -= delta.x;\n                break;\n        }\n        if (rotation !== 0) {\n            // calc center deviation\n            var newCenter = this.rect.getCenter();\n            // rotate new center around old\n            var target = newCenter.rotate(rotation, center);\n            // adjust new center\n            delta = target.minus(newCenter);\n            this.rect.x += delta.x;\n            this.rect.y += delta.y;\n        }\n        if (this.restrictToImage && !this.rect.fitsIn(new $.Rect(0, 0, 1, 1))) {\n            this.rect = oldRect;\n        }\n        this.draw();\n    }\n\n    function onKeyPress(e) {\n        var key = e.keyCode ? e.keyCode : e.charCode;\n        console.log(\"AHOY\", key, e.keyCode, e.charCode);\n        if (key === 13) {\n            this.confirm();\n        } else if ( key == 27 ) {\n            this.cancel();\n        } else if (String.fromCharCode(key) === this.keyboardShortcut) {\n            this.toggleState();\n        }\n    }\n\n    function getPrerotatedRect(start, end, height) {\n        if (start.x > end.x) {\n            // always draw left to right\n            var x = start;\n            start = end;\n            end = x;\n        }\n        var delta = end.minus(start);\n        var dist = start.distanceTo(end);\n        var angle = -1 * Math.atan2(delta.x, delta.y) + (Math.PI / 2);\n        var center = new $.Point(\n            delta.x / 2 + start.x,\n            delta.y / 2 + start.y\n        );\n        var rect = new $.SelectionRect(\n            center.x - (dist / 2),\n            center.y - (height / 2),\n            dist,\n            height,\n            angle\n        );\n        var heightModDelta = new $.Point(0, height);\n        heightModDelta = heightModDelta.rotate(rect.getDegreeRotation(), new $.Point(0, 0));\n        rect.x += heightModDelta.x / 2;\n        rect.y += heightModDelta.y / 2;\n        return rect;\n    }\n\n    function pointIsInImage(point) {\n        return point.x >= 0 && point.x <= 1 && point.y >= 0 && point.y <= 1;\n    }\n\n    function restrictVector(delta, end) {\n        var start;\n        for (var prop in {x: 0, y: 0}) {\n            start = end[prop] - delta[prop];\n            if (start < 1 && start > 0) {\n                if (end[prop] > 1) {\n                    delta[prop] -= end[prop] - 1;\n                    end[prop] = 1;\n                } else if (end[prop] < 0) {\n                    delta[prop] -= end[prop];\n                    end[prop] = 0;\n                }\n            }\n        }\n    }\n\n})(OpenSeadragon);\n","(function( $ ){\n    'use strict';\n\n    /**\n     * @class Overlay\n     * @classdesc Provides a way to float an HTML element on top of the viewer element.\n     *\n     * @memberof OpenSeadragon\n     * @param {Object} options\n     * @param {Element} options.element\n     * @param {OpenSeadragon.Point|OpenSeadragon.Rect|OpenSeadragon.SelectionRect} options.location - The\n     * location of the overlay on the image. If a {@link OpenSeadragon.Point}\n     * is specified, the overlay will keep a constant size independently of the\n     * zoom. If a {@link OpenSeadragon.Rect} is specified, the overlay size will\n     * be adjusted when the zoom changes.\n     * @param {OpenSeadragon.OverlayPlacement} [options.placement=OpenSeadragon.OverlayPlacement.TOP_LEFT]\n     * Relative position to the viewport.\n     * Only used if location is a {@link OpenSeadragon.Point}.\n     * @param {OpenSeadragon.Overlay.OnDrawCallback} [options.onDraw]\n     * @param {Boolean} [options.checkResize=true] Set to false to avoid to\n     * check the size of the overlay everytime it is drawn when using a\n     * {@link OpenSeadragon.Point} as options.location. It will improve\n     * performances but will cause a misalignment if the overlay size changes.\n     */\n    $.SelectionOverlay = function( element, location) {\n        $.Overlay.apply( this, arguments );\n\n        // set the rotation in radians\n        if ( $.isPlainObject( element ) ) {\n            this.rotation = element.location.rotation || 0;\n        } else {\n            this.rotation = location.rotation || 0;\n        }\n    };\n\n    $.SelectionOverlay.prototype = $.extend( Object.create($.Overlay.prototype), {\n\n        /**\n         * @function\n         * @param {Element} container\n         */\n        drawHTML: function() {\n            $.Overlay.prototype.drawHTML.apply( this, arguments );\n            this.style.transform = this.style.transform.replace(/ ?rotate\\(.+rad\\)/, '') +\n                ' rotate(' + this.rotation + 'rad)';\n        },\n\n        /**\n         * @function\n         * @param {OpenSeadragon.Point|OpenSeadragon.Rect} location\n         * @param {OpenSeadragon.OverlayPlacement} position\n         */\n        update: function( location ) {\n            $.Overlay.prototype.update.apply( this, arguments );\n            this.rotation = location.rotation || 0;\n        }\n    });\n\n}( OpenSeadragon ));\n","(function( $ ){\n    'use strict';\n\n    /**\n     * @class SelectionRect\n     * @classdesc A display rectangle is very similar to {@link OpenSeadragon.Rect} but adds rotation\n     * around the center point\n     *\n     * @memberof OpenSeadragon\n     * @extends OpenSeadragon.Rect\n     * @param {Number} x The vector component 'x'.\n     * @param {Number} y The vector component 'y'.\n     * @param {Number} width The vector component 'height'.\n     * @param {Number} height The vector component 'width'.\n     * @param {Number} rotation The rotation in radians\n     */\n    $.SelectionRect = function( x, y, width, height, rotation ) {\n        $.Rect.apply( this, [ x, y, width, height ] );\n\n        /**\n         * The rotation in radians\n         * @member {Number} rotation\n         * @memberof OpenSeadragon.SelectionRect#\n         */\n        this.rotation = rotation || 0;\n    };\n\n    $.SelectionRect.fromRect = function(rect) {\n        return new $.SelectionRect(\n            rect.x,\n            rect.y,\n            rect.width,\n            rect.height\n        );\n    };\n\n    $.SelectionRect.prototype = $.extend( Object.create($.Rect.prototype), {\n\n        /**\n         * @function\n         * @returns {OpenSeadragon.Rect} a duplicate of this Rect\n         */\n        clone: function() {\n            return new $.SelectionRect(this.x, this.y, this.width, this.height, this.rotation);\n        },\n\n        /**\n         * Determines if two Rectangles have equivalent components.\n         * @function\n         * @param {OpenSeadragon.Rect} rectangle The Rectangle to compare to.\n         * @return {Boolean} 'true' if all components are equal, otherwise 'false'.\n         */\n        equals: function( other ) {\n            return $.Rect.prototype.equals.apply(this, [ other ]) &&\n                ( this.rotation === other.rotation );\n        },\n\n        /**\n         * Provides a string representation of the rectangle which is useful for\n         * debugging.\n         * @function\n         * @returns {String} A string representation of the rectangle.\n         */\n        toString: function() {\n            return '[' +\n                (Math.round(this.x*100) / 100) + ',' +\n                (Math.round(this.y*100) / 100) + ',' +\n                (Math.round(this.width*100) / 100) + 'x' +\n                (Math.round(this.height*100) / 100) + '@' +\n                (Math.round(this.rotation*100) / 100) +\n            ']';\n        },\n\n        swapWidthHeight: function() {\n            var swapped = this.clone();\n            swapped.width = this.height;\n            swapped.height = this.width;\n            swapped.x += (this.width - this.height) / 2;\n            swapped.y += (this.height - this.width) / 2;\n            return swapped;\n        },\n\n        /**\n         * @function\n         * @returns {Number} The rotaion in degrees\n         */\n        getDegreeRotation: function() {\n            return this.rotation * (180/Math.PI);\n        },\n\n        /**\n         * @function\n         * @param {OpenSeadragon.Point} point\n         * @returns {Number} The angle in radians\n         */\n        getAngleFromCenter: function(point) {\n            var diff = point.minus(this.getCenter());\n            return Math.atan2(diff.x, diff.y);\n        },\n\n        /**\n         * Rounds pixel coordinates\n         * @function\n         * @returns {SelectionRect} The altered rect\n         */\n        round: function() {\n            return new $.SelectionRect(\n                Math.round(this.x),\n                Math.round(this.y),\n                Math.round(this.width),\n                Math.round(this.height),\n                this.rotation\n            );\n        },\n\n        /**\n         * Fixes negative width/height, rotation larger than PI\n         * @function\n         * @returns {SelectionRect} The normalized rect\n         */\n        normalize: function() {\n            var fixed = this.clone();\n            if (fixed.width < 0) {\n                fixed.x += fixed.width;\n                fixed.width *= -1;\n            }\n            if (fixed.height < 0) {\n                fixed.y += fixed.height;\n                fixed.height *= -1;\n            }\n            fixed.rotation %= Math.PI;\n            return fixed;\n        },\n\n        /**\n         * @function\n         * @param {OpenSeadragon.Rect} area\n         * @returns {Boolean} Does this rect fit in a specified area\n         */\n        fitsIn: function(area) {\n            var rect = this.normalize();\n            var corners = [\n                rect.getTopLeft(),\n                rect.getTopRight(),\n                rect.getBottomRight(),\n                rect.getBottomLeft(),\n            ];\n            var center = rect.getCenter();\n            var rotation = rect.getDegreeRotation();\n            var areaEnd = area.getBottomRight();\n            for (var i = 0; i < 4; i++) {\n                corners[i] = corners[i].rotate(rotation, center);\n                if (corners[i].x < area.x || corners[i].x > areaEnd.x ||\n                    corners[i].y < area.y || corners[i].y > areaEnd.y) {\n                    return false;\n                }\n            }\n            return true;\n        },\n\n        /**\n         * Reduces rotation to within [-45, 45] degrees by swapping width & height\n         * @function\n         * @returns {SelectionRect} The altered rect\n         */\n        reduceRotation: function() {\n            var reduced;\n            if (this.rotation < Math.PI / (-4)) {\n                reduced = this.swapWidthHeight();\n                reduced.rotation += Math.PI / 2;\n            } else if (this.rotation > Math.PI / 4) {\n                reduced = this.swapWidthHeight();\n                reduced.rotation -= Math.PI / 2;\n            } else {\n                reduced = this.clone();\n            }\n            return reduced;\n        },\n    });\n\n}( OpenSeadragon ));\n"],"sourceRoot":"/source/"}